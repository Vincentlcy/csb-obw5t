{"version":3,"sources":["Vaccines.tsx","CovidCases.tsx","TreatmentsAndVaccines.tsx","HealthInfo.tsx","MainPage.tsx","HomePage.tsx","Routes.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["columns","title","dataIndex","key","width","filters","text","value","onFilter","record","Category","indexOf","render","color","Stage","percent","style","strokeColor","format","Vaccines","useState","cases","setCases","loadData","useCallback","a","fetch","response","reader","body","getReader","read","result","decoder","TextDecoder","decode","csv","convertedCSV","readString","header","dynamicTyping","results","data","useEffect","className","subTitle","dataSource","CovidCases","filteredCases","filter","c","prname","sort","sortByDate","LineChart","height","margin","top","right","left","bottom","CartesianGrid","stroke","XAxis","dataKey","YAxis","Tooltip","Legend","Line","type","name","b","moment","date","isAfter","Paragraph","Typography","TreatmentsAndVaccines","productCategory","setProductCategory","stageOfDevelopment","setStageOfDevelopment","tempCategory","forEach","r","some","pc","ProductCategory","index","findIndex","undefined","push","tempStage","StageOfDevelopment","COLORS","RADIAN","Math","PI","renderCustomizedLabel","cx","cy","midAngle","innerRadius","outerRadius","radius","x","cos","y","sin","fill","textAnchor","dominantBaseline","toFixed","marginRight","marginLeft","PieChart","Pie","labelLine","label","map","entry","Cell","length","defaultTree","children","size","CustomizedContent","console","log","this","props","root","depth","colors","floor","strokeWidth","strokeOpacity","fontSize","fillOpacity","React","PureComponent","HealthInfo","setData","tempTreeData","prename","singleTreeData","numtotal_1dose","numtotal_2doses","Treemap","content","Title","Link","Text","MainPage","href","level","Header","Layout","Content","Footer","Sider","HomePage","collapsed","setCollapsed","padding","position","zIndex","src","alt","collapsible","onCollapse","theme","overflow","marginTop","defaultSelectedKeys","Item","icon","DesktopOutlined","to","LineChartOutlined","PieChartOutlined","TableOutlined","AppstoreOutlined","exact","path","component","textAlign","Routes","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.87b4ead4.chunk.js","sourcesContent":["/**\n * Vaccines detail table\n * This component will read the csv file and render the table of vaccines information\n */\n// Libraries\nimport React, { FC, useCallback, useState, useEffect } from \"react\";\nimport { readString } from \"react-papaparse\";\nimport \"antd/dist/antd.css\";\nimport \"./index.css\";\nimport { Table, Tag, Progress, PageHeader } from \"antd\";\n\n// Table Style\nconst columns = [\n  {\n    title: \"Developer / Researcher\",\n    dataIndex: \"Developer\",\n    key: \"Developer\",\n    width: 250,\n  },\n  {\n    title: \"Product Category\",\n    dataIndex: \"Category\",\n    key: \"Category\",\n    width: 200,\n    filters: [          //Filter Style\n      {\n        text: \"DNA-based\",\n        value: \"DNA-based\",\n      },\n      {\n        text: \"Inactivated virus\",\n        value: \"Inactivated virus\",\n      },\n      {\n        text: \"Replicating bacterial vector\",\n        value: \"Replicating bacterial vector\",\n      },\n      {\n        text: \"Unknown\",\n        value: \"Unknown\",\n      },\n      {\n        text: \"Virus-like particle\",\n        value: \"Virus-like particle\",\n      },\n      {\n        text: \"RNA-based vaccine\",\n        value: \"RNA-based vaccine\",\n      },\n      {\n        text: \"Replicating viral vector\",\n        value: \"Replicating viral vector\",\n      },\n      {\n        text: \"Protein subunit\",\n        value: \"Protein subunit\",\n      },\n      {\n        text: \"Non-replicating viral vector\",\n        value: \"Non-replicating viral vector\",\n      },\n      {\n        text: \"Live attenuated virus\",\n        value: \"UnkLive attenuated virus\",\n      },\n    ],\n    onFilter: (value: any, record: any) => record.Category.indexOf(value) === 0,\n    render: (Category: string) => {         //Tag color\n      let color = \"geekblue\";\n      if (Category === \"Inactivated virus\") {\n        color = \"volcano\";\n      } else if (Category === \"Replicating bacterial vector\") {\n        color = \"lime\";\n      } else if (Category === \"Unknown\") {\n        color = \"gold\";\n      } else if (Category === \"Virus-like particle\") {\n        color = \"red\";\n      } else if (Category === \"RNA-based vaccine\") {\n        color = \"yellow\";\n      } else if (Category === \"Replicating viral vector\") {\n        color = \"orange\";\n      } else if (Category === \"Protein subunit\") {\n        color = \"green\";\n      } else if (Category === \"Non-replicating viral vector\") {\n        color = \"gray\";\n      } else if (Category === \"Live attenuated virus\") {\n        color = \"blue\";\n      }\n      return (\n        <Tag color={color} key={Category}>\n          {Category}\n        </Tag>\n      );\n    },\n  },\n  {\n    title: \"Stage of Development\",\n    dataIndex: \"Stage\",\n    key: \"Stage\",\n    width: 350,\n    onFilter: (value: any, record: any) => record.Stage.indexOf(value) === 0,\n    filters: [            //Filter style\n      {\n        text: \"Pre-clinical\",\n        value: \"Pre-clinical\",\n      },\n      {\n        text: \"Authorized\",\n        value: \"Authorized\",\n      },\n      {\n        text: \"Phase I\",\n        value: \"Phase I\",\n      },\n      {\n        text: \"Phase I/II\",\n        value: \"Phase I/II\",\n      },\n      {\n        text: \"Phase II\",\n        value: \"Phase II\",\n      },\n      {\n        text: \"Phase II/III\",\n        value: \"Phase II/III\",\n      },\n      {\n        text: \"Phase III\",\n        value: \"Phase III\",\n      },\n    ],\n    render: (Stage: string) => {            // progressing bar style\n      let percent = 0;\n      if (Stage === \"Pre-clinical\") {\n        percent = 20;\n      } else if (Stage === \"Phase I\") {\n        percent = 30;\n      } else if (Stage === \"Phase I/II\") {\n        percent = 35;\n      } else if (Stage === \"Phase II\") {\n        percent = 50;\n      } else if (Stage === \"Phase II/III\") {\n        percent = 60;\n      } else if (Stage === \"Phase III\") {\n        percent = 70;\n      } else if (Stage === \"Authorized\") {\n        percent = 100;\n      }\n      return (                              // progressing bar color change\n        <div style={{ width: 200 }}>\n          <Progress\n            strokeColor={{\n              \"0%\": \"#108ee9\",\n              \"100%\": \"#87d068\",\n            }}\n            percent={percent}\n            format={() => Stage}\n          />{\" \"}\n        </div>\n      );\n    },\n  },\n  {\n    title: \"Anticipated Next Steps\",\n    key: \"Anticipated\",\n    dataIndex: \"Anticipated Next Steps\",\n  },\n  {\n    title: \"Date Last Updated\",\n    key: \"Date\",\n    dataIndex: \"Date Last Updated\",\n  },\n];\n\nconst Vaccines: FC = () => {\n  const [cases, setCases] = useState<any[]>([]);\n\n  // Csv file reader\n  const loadData = useCallback(async () => {\n    const response = await fetch(\"Vaccines.csv\");\n    const reader = response.body?.getReader();\n    const result = await reader?.read();\n    const decoder = new TextDecoder(\"utf-8\");\n    const csv = await decoder.decode(result?.value);\n    const convertedCSV = readString(csv, {\n      header: true,\n      dynamicTyping: true,\n    });\n    const results = convertedCSV.data;\n    setCases(results);\n  }, []);\n\n  // read csv file\n  useEffect(() => {\n    loadData();\n  }, [loadData]);\n\n\n  return (\n    <div><PageHeader\n    className=\"Vaccines Development Stage\"\n    title=\"Vaccines Development Stage\"\n    subTitle=\"The table shows the progress and basic situation of vaccines developed by various institutions\"\n  />\n      <Table columns={columns} dataSource={cases}/>\n    </div>\n  );\n};\n\nexport default Vaccines;\n","/**\n * Covid Case Line Chart component\n * The component will read the csv data file and draw a line chart base on the file\n */\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport {\n  LineChart,\n  Line,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  Tooltip,\n  Legend,\n} from \"recharts\";\nimport { readString } from \"react-papaparse\";\nimport \"./App.css\";\nimport moment from \"moment\";\nimport { PageHeader} from \"antd\";\n\nconst CovidCases: React.FC = () => {\n  const [cases, setCases] = useState<any[]>([]);\n\n  const loadData = useCallback(async () => {\n    const response = await fetch(\"covid19-download.csv\");\n    const reader = response.body?.getReader();\n    const result = await reader?.read();\n    const decoder = new TextDecoder(\"utf-8\");\n    const csv = await decoder.decode(result?.value);\n    const convertedCSV = readString(csv, { header: true, dynamicTyping: true });\n    // console.log(data);\n    const filteredCases = convertedCSV.data\n      .filter((c: any) => c.prname === \"Canada\")\n      .sort(sortByDate);\n    setCases(filteredCases);\n  }, []);\n\n  useEffect(() => {\n    loadData();\n  }, [loadData]);\n\n  return (\n    <div>\n      <PageHeader\n        className=\"Covid Case Chart\"\n        title=\"Covid Case Chart\"\n        subTitle=\"This chart shows number of infected and death in Canada.\"\n      />\n    <div className=\"container-fluid\">\n      <h1>Canada Covid-19 number of confirmed and number of deaths</h1>\n      <LineChart width={1200} height={630} data={cases} className=\"height-fix\" margin={{ top: 15, right: 30, left: 20, bottom: 5 }}>\n        <CartesianGrid stroke=\"#ccc\" />\n        <XAxis dataKey=\"date\" />\n        <YAxis />\n        <Tooltip />\n        <Legend />\n        <Line type=\"monotone\" name=\"Infected\" dataKey=\"numconf\" stroke=\"blue\" />\n        <Line type=\"monotone\" name=\"Deaths\" dataKey=\"numdeaths\" stroke=\"red\" />\n      </LineChart>\n      <br/>\n    </div>\n    </div>\n  );\n\n  function sortByDate(a: any, b: any) {\n    return moment(a.date).isAfter(moment(b.date)) ? 1 : -1;\n  }\n};\n\nexport default CovidCases;\n","/**\n * Vaccines Type charts\n * File will read the csv and draw 2 pies chart\n * one for vaccines type and one for vaccines development stage\n */\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { PieChart, Pie, Legend, Tooltip, Cell } from \"recharts\";\nimport { readString } from \"react-papaparse\";\nimport \"./App.css\";\nimport { PageHeader, Typography} from \"antd\";\n\ninterface IPieData {\n  name: string;\n  value: number;\n}\nconst { Paragraph } = Typography;\n\nconst TreatmentsAndVaccines: React.FC = () => {\n  const [productCategory, setProductCategory] = useState<IPieData[]>([]);\n  const [stageOfDevelopment, setStageOfDevelopment] = useState<IPieData[]>([]);\n\n  const loadData = useCallback(async () => {\n    const response = await fetch(\"Treatments and Vaccines.csv\");\n    const reader = response.body?.getReader();\n    const result = await reader?.read();\n    const decoder = new TextDecoder(\"utf-8\");\n    const csv = await decoder.decode(result?.value);\n    const convertedCSV = readString(csv, { header: true, dynamicTyping: true });\n    const results = convertedCSV.data;\n\n    const tempCategory: any[] = [];\n    results.forEach((r: any) => {\n      if (!tempCategory.some((pc) => pc.name === r.ProductCategory)) {\n        if (r.ProductCategory !== undefined) {\n          tempCategory.push({ name: r.ProductCategory, value: 1 });\n        }\n      } else {\n        let index = tempCategory.findIndex(\n          (pc) => pc.name === r.ProductCategory\n        );\n        tempCategory[index].value += 1;\n      }\n    });\n    setProductCategory(tempCategory);\n\n    const tempStage: any[] = [];\n    results.forEach((r: any) => {\n      if (!tempStage.some((pc) => pc.name === r.StageOfDevelopment)) {\n        if (r.StageOfDevelopment !== undefined) {\n          tempStage.push({ name: r.StageOfDevelopment, value: 1 });\n        }\n      } else {\n        let index = tempStage.findIndex(\n          (pc) => pc.name === r.StageOfDevelopment\n        );\n        tempStage[index].value += 1;\n      }\n    });\n    setStageOfDevelopment(tempStage);\n  }, []);\n\n  useEffect(() => {\n    loadData();\n  }, [loadData]);\n\n  const COLORS = [\n    \"#0088FE\",\n    \"#00C49F\",\n    \"#FFBB28\",\n    \"#FF8042\",\n    \"#ff0000\",\n    \"#ff4000\",\n    \"#ff8000\",\n    \"#ffbf00\",\n    \"#ffff00\",\n    \"#bfff00\",\n    \"#ffbf00\",\n    \"#ffff00\",\n    \"#bfff00\",\n  ];\n\n  const RADIAN = Math.PI / 180;\n  const renderCustomizedLabel = ({\n    cx,\n    cy,\n    midAngle,\n    innerRadius,\n    outerRadius,\n    percent,\n    index,\n  }: any) => {\n    const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n    const x = cx + radius * Math.cos(-midAngle * RADIAN);\n    const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n    return (\n      <text\n        x={x}\n        y={y}\n        fill=\"white\"\n        textAnchor={x > cx ? \"start\" : \"end\"}\n        dominantBaseline=\"central\"\n      >\n        {`${(percent * 100).toFixed(0)}%`}\n      </text>\n    );\n  };\n\n  return (\n    <div>\n      <PageHeader\n        className=\"Vaccines Pie Chart\"\n        title=\"Vaccines Pie Chart\"\n        subTitle=\"This pie chart shows the percentage of different type and stage of vaccines under development\"\n      />\n      <div className=\"rowC\">\n      <Paragraph style={{marginRight:30, marginLeft: 50}}>\n      This pie chart clearly show us the percentage of different type of vaccines under development. It is clear that protein subunit\n      is the most common vaccines types and followed by RNA-based and non-replicating viral.\n      </Paragraph>\n      <Paragraph style={{marginRight:30}}>Although a large number of medical companies and institutions around the world have invested in the research and\n         development of the Covid vaccine. But most of them are still in the preliminary stage. Only a very small number of vaccines \n         have completed clinical trials. </Paragraph>\n    </div>\n    <div className='rowC' style={{marginLeft: 50}}>\n      <PieChart width={750} height={745}>\n        <Pie\n          dataKey=\"value\"\n          data={productCategory}\n          cx=\"50%\"\n          cy=\"50%\"\n          outerRadius={250}\n          fill=\"#8884d8\"\n          labelLine={true}\n          label={renderCustomizedLabel}\n        >\n          {productCategory.map((entry, index) => (\n            <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n          ))}\n        </Pie>\n        <Tooltip />\n        <Legend />\n        </PieChart>\n        <PieChart width={750} height={700}>\n        <Pie\n          dataKey=\"value\"\n          data={stageOfDevelopment}\n          cx=\"50%\"\n          cy=\"50%\"\n          outerRadius={250}\n          fill=\"#82ca9d\"\n          labelLine={true}\n          label={renderCustomizedLabel}\n        >\n          {stageOfDevelopment.map((entry, index) => (\n            <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n          ))}\n        </Pie>\n        <Tooltip />\n        <Legend />\n      </PieChart>\n    </div>\n\n    </div>\n  );\n};\n\nexport default TreatmentsAndVaccines;\n","/**\n * Vaccines Coverage Chart\n * This component will read the csv file and generate a map of vaccines coverage \n */\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { Treemap, Tooltip } from \"recharts\";\nimport { readString } from \"react-papaparse\";\nimport \"./App.css\";\nimport { PageHeader} from \"antd\";\n\ninterface TreeData {\n  name: string;\n  children: TreeNode[];\n}\n\ninterface TreeNode {\n  name: string;\n  size: number;\n}\n\nconst defaultTree: TreeData[] = [\n  {\n    name: 'axis',\n    children: [\n      { name: 'Axes', size: 1302 },\n      { name: 'Axis', size: 24593 },\n      { name: 'AxisGridLine', size: 652 },\n      { name: 'AxisLabel', size: 636 },\n      { name: 'CartesianAxes', size: 6703 },\n    ],\n  }\n]\n\nclass CustomizedContent extends React.PureComponent {\n  render() {\n    console.log(this.props);\n    // @ts-ignore: not sure wdf is going on\n    const { root, depth, x, y, width, height, index, colors, name } = this.props;\n\n    return (\n      <g>\n        <rect\n          x={x}\n          y={y}\n          width={width}\n          height={height}\n          style={{\n            fill: depth < 2 ? colors[Math.floor((index / root.children.length) * 25)] : 'none',\n            //fill: depth < 2 ? colors[index] : 'none',\n            stroke: '#fff',\n            strokeWidth: 3 / (depth + 1e-10),\n            strokeOpacity: 1 / (depth + 1e-10),\n          }}\n        />\n        {depth === 1 ? (\n          <text x={x + width / 2} y={y + height / 2 + 7} textAnchor=\"middle\" fill=\"#fff\" fontSize={16}>\n            {name}\n          </text>\n        ) : null}\n        {depth === 1 ? (\n          <text x={x + 5} y={y + 20} fill=\"#fff\" fontSize={16} fillOpacity={0.9}>\n            {index + 1}\n          </text>\n        ) : null}\n      </g>\n    );\n  }\n}\n\nconst HealthInfo: React.FC = () => {\n  const [data, setData] = useState<TreeData[]>(defaultTree);\n\n  const loadData = useCallback(async () => {\n    const response = await fetch(\"vaccination-coverage.csv\");\n    const reader = response.body?.getReader();\n    const result = await reader?.read();\n    const decoder = new TextDecoder(\"utf-8\");\n    const csv = await decoder.decode(result?.value);\n    const convertedCSV = readString(csv, { header: true, dynamicTyping: true });\n    const results = convertedCSV.data;\n    const tempTreeData: TreeData[] = [];\n    results.forEach((r: any) => {\n      if (r.prename !== undefined) {\n        let singleTreeData: TreeData = {\n          name: r.prename,\n          children: []\n        };\n        singleTreeData.children.push({ name: 'numtotal_1dose', size: r.numtotal_1dose });\n        singleTreeData.children.push({ name: 'numtotal_2doses', size: r.numtotal_2doses });\n        tempTreeData.push(singleTreeData);\n      }\n    });\n    console.log(tempTreeData);\n    setData(tempTreeData);\n  }, []);\n\n  useEffect(() => {\n    loadData();\n  }, [loadData]);\n\n  const COLORS = [\n    \"#8889DD\",\n    \"#9597E4\",\n    \"#8DC77B\",\n    \"#A5D297\",\n    \"#E2CF45\",\n    \"#F8C12D\",\n    \"#0088FE\",\n    \"#00C49F\",\n    \"#FFBB28\",\n    \"#FF8042\",\n    \"#ff0000\",\n    \"#ff8000\",\n    \"#ffbf00\",\n    \"#bfff00\",\n    \"#ffbf00\",\n    \"#ffff00\",\n    \"#9400D3\",\n    \"#4B0082\",\n    \"#0000FF\",\n    \"#00FF00\",\n    \"#FF0000\",\n  ];\n\n  return (\n    <div>\n      <PageHeader\n        className=\"Vaccines Coverage Chart\"\n        title=\"Vaccines Coverage Chart\"\n        subTitle=\"This chart shows how many people get at least one vaccine in each province.\"\n      />\n    <div className=\"container-fluid\">\n      <h1>Vaccine Coverage</h1>\n      <Treemap\n        width={1600}\n        height={1000}\n        data={data}\n        dataKey=\"size\"\n        stroke=\"#fff\"\n        fill=\"#8884d8\"\n        //@ts-ignore\n        content={<CustomizedContent colors={COLORS} />}\n      >\n        <Tooltip />\n      </Treemap>\n    </div>\n    </div>\n  );\n};\n\nexport default HealthInfo;\n","/**\n * HomePage Component \n * shows the introduction and information about the website\n * Pure Html\n */\nimport React from \"react\";\nimport {Divider,Typography} from \"antd\";\nimport './index.css';\n\nconst { Title, Paragraph, Text, Link } = Typography;\n\nconst MainPage: React.FC = () => {\n\n  return (\n    <div>      \n      <Typography style={{marginLeft: 15}}>\n        <Title>Introduction</Title>\n        <Divider/>\n        <Paragraph className=\"mainpara\" style={{marginRight: 250}}>\n        The number of new coronavirus infections is currently on the rise, and the number of infections \n        in Canada is approaching one million. Vaccination plans in various countries around the world\n         are proceeding in an orderly manner. In order to better focus on displaying information related\n          to the new coronavirus. We have developed this new coronavirus information visualization platform.\n        </Paragraph>\n        <Title>Content</Title>\n        <Divider/>\n        <div className=\"mainpara\">\n          <Paragraph style={{marginRight: 250}}>\n          The data display of this website is mainly divided into 4 parts. Basic data: A line chart of the\n           number of new coronavirus infections and deaths over time. Pie chart based on vaccine type and \n           development progress. The form of vaccines introduced in detail. You can filter the vaccines in \n           the form based on the type and development progress. Finally, there is a chart showing the \n           progress of vaccination in various provinces. For more detail, you can view at this \n           <Link href=\"https://docs.google.com/document/d/11WB6BY0G19YKHv7wFfgzVgMeFPyhoawcrPpXn2iMfWw/edit?usp=sharing\"> document</Link>.\n          </Paragraph>\n        </div>\n        \n        <Title>Data</Title>\n        <Divider/>\n        <div className=\"mainpara\">\n          <Title level={4}>Covid Case Count</Title>\n          <Paragraph>\n            <li>The Covid case count <Link href=\"https://ourworldindata.org/coronavirus-source-data\">data</Link> relies on data from Johns Hopkins University</li>\n          </Paragraph>\n          <Title level={4}>Vaccines</Title>\n          <Paragraph>\n            <li>The vaccines <Link href=\"https://covid-19tracker.milkeninstitute.org/#vaccines_intro\">data</Link> from Milken Institute and update by ourself.</li>          \n          </Paragraph>\n          <Title level={4}>Vaccines Coverage</Title>\n          <Paragraph>\n            <li>The vaccines coverage <Link href=\"https://health-infobase.canada.ca/covid-19/vaccination-coverage/\">Data Source</Link> from Canada Government.</li>          \n          </Paragraph>\n          <br/>\n          <Paragraph>For more type of data, you can find it at <Link href=\"https://mdl.library.utoronto.ca/covid-19/data\">University of Toronto Libraries</Link>.</Paragraph>\n        </div>\n        <Title>Packages</Title>\n        <Divider/>\n        <div className=\"mainpara\">\n        <Title level={3}>React</Title>\n        <Paragraph>\n          <li>React is a JavaScript library for building user interfaces.</li>\n          <li><Link href=\"https://reactjs.org/\">React Document Website</Link></li>\n          <li><Link href=\"https://github.com/facebook/react/\">React Github</Link></li>\n        </Paragraph>\n        <Title level={3}>Ant Design</Title>\n        <Paragraph>\n          <li>A design system for enterprise-level products. Create an efficient and enjoyable work experience.</li>\n          <li><Link href=\"https://ant.design/\">Ant Design Website</Link></li>\n          <li><Link href=\"https://github.com/ant-design/ant-design/\">Ant Design Github</Link></li>\n        </Paragraph>\n        <Title level={3}>Recharts</Title>\n        <Paragraph>\n          <li>Re-designed charting library built with React and D3.</li>\n          <li><Link href=\"https://recharts.org/en-US/\">Rechart Website</Link></li>\n          <li><Link href=\"https://github.com/recharts/recharts\">Rechart Github</Link></li>\n        </Paragraph>\n        </div>\n      </Typography>\n    </div>\n  );\n}\n\n\nexport default MainPage;","/**\n * Home Page\n * The page control all component.\n * This component is only have the header, Footer and sider bar\n * It will choose the content (other component) base on which menu item be clicked.\n * UI render with Ant Design\n */\n// Library\nimport * as React from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport { Layout, Menu} from 'antd';\nimport {\n  DesktopOutlined,\n  PieChartOutlined,\n  TableOutlined,\n  LineChartOutlined,\n  AppstoreOutlined,\n} from '@ant-design/icons';\n\n// Style Files\nimport 'antd/dist/antd.css';\nimport './index.css';\n\n// The content component to be refers\nimport Vaccines from \"./Vaccines\";\nimport CovidCases from \"./CovidCases\";\nimport TreatmentsAndVaccines from \"./TreatmentsAndVaccines\";\nimport HealthInfo from \"./HealthInfo\";\nimport MainPage from \"./MainPage\";\n\nconst { Header, Content, Footer, Sider } = Layout;\n\nconst HomePage: React.FC = (props) => {\n  const [collapsed, setCollapsed] = React.useState<boolean>(false); // side bar shrink or not\n\n  // onClick action, shrink or extend the bar\n  const onCollapse = (collapsed: boolean) => {\n    console.log(collapsed);\n    setCollapsed(collapsed);\n  };\n\n  return (\n    <Router>\n      <div className=\"container\">\n          <Header className=\"site-layout\" style={{ padding: 0, position: 'fixed', zIndex: 1, width: '100%'}}>\n              <img src=\"./UofABanner.png\" alt=\"logo\" className=\"logo\"/>\n          </Header>\n        <Layout>\n          <Sider collapsible collapsed={collapsed} onCollapse={onCollapse} theme=\"light\" \n            style={{ overflow: 'visible', height: '100vh', position: 'fixed', left: 0, marginTop: 64\n          }}>\n            <Menu defaultSelectedKeys={['1']}>\n              <Menu.Item key=\"1\" icon={<DesktopOutlined />}>\n                <Link to=\"/\"/>\n                Home\n                </Menu.Item>\n              <Menu.Item key=\"2\" icon={<LineChartOutlined />}>\n                <Link to='/CovidCases'/>\n                Covid Case Count\n              </Menu.Item>\n              <Menu.Item key=\"3\" icon={<PieChartOutlined />}>\n                <Link to=\"/treatments-and-vaccines\"/>\n                Vaccines Pie Chart\n              </Menu.Item>\n              <Menu.Item key=\"4\" icon={<TableOutlined />}>\n                <Link to=\"/Vaccines\"/>\n                  Vaccines Table\n              </Menu.Item>\n              <Menu.Item key=\"5\" icon={<AppstoreOutlined />}>\n                <Link to=\"/health-info\"/>\n                  Vaccines Coverage\n              </Menu.Item>\n            </Menu>\n          </Sider>\n          <Layout className=\"site-layout\" style={{ marginLeft: collapsed?80:200, marginTop: 64}}>\n            \n            <Content style={{ margin: '24px 16px 0', overflow: 'initial' }}>\n              <Route exact path='/' component={MainPage}/>\n              <Route exact path=\"/Vaccines\" component={Vaccines} />\n              <Route exact path=\"/CovidCases\" component={CovidCases} />\n              <Route exact path=\"/treatments-and-vaccines\" component={TreatmentsAndVaccines} />\n              <Route exact path=\"/health-info\" component={HealthInfo} />\n            </Content>\n            <Footer style={{ textAlign: 'center' }}>University of Alberta MRC ©2021 <br/>Created by Chuyang L. and Mingzhi Z.</Footer>\n          </Layout>\n        </Layout>\n      </div>\n    </Router>\n  );\n};\nexport default HomePage;\n","/**\n * Router, control the website direction\n * React file\n */\nimport * as React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport HomePage from \"./HomePage\";\nimport CovidCases from \"./CovidCases\";\nimport TreatmentsAndVaccines from \"./TreatmentsAndVaccines\";\nimport HealthInfo from \"./HealthInfo\";\nimport Vaccines from \"./Vaccines\";\n\nclass Routes extends React.Component<any, {}> {\n  public render() {\n    return (\n      <React.Fragment>\n        <Switch>\n          <Route path=\"/\" component={HomePage} />\n          <Route path=\"/covid-cases\" exact component={CovidCases} />\n          <Route\n            path=\"/treatments-and-vaccines\"\n            component={TreatmentsAndVaccines}\n          />\n\t\t  <Route path=\"/Vaccines\" component={Vaccines}/>\n        </Switch>\n        <Route path=\"/health-info\" component={HealthInfo} />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Routes;\n","/**\n * React generated: app page\n * Not Used\n */\n\nimport React from 'react';\nimport Routes from './Routes';\nimport './App.css';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <Router>\n      <Route component={Routes}/>\n    </Router>\n  );\n}\n\nexport default App;\n","/**\n * React File\n */\nimport { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/**\n * React Home Page\n */\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"../node_modules/antd/dist/antd.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}